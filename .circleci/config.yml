version: 2
anchors:
  - &rust_job
    docker:
      - image: rust:latest

  - &setup
    run:
      name: Set up the environment
      command: |
        git submodule update --init --recursive

        # used in lolbench's tests -- we want to test committing to data dirs
        git config --global pull.rebase true
        git config --global user.email 'adam.n.perry+lolbench@gmail.com'
        git config --global user.name "lolbench"

  - &install_deps
    run:
      name: Install workspace dependencies
      command: |
        apt-get update -y
        apt-get upgrade -y
        apt-get install -y llvm-dev libclang-dev clang cmake

  - &restore_cache
    restore_cache:
      key: cargo-v0-{{ checksum "Cargo.lock" }}

  - &save_cache
    save_cache:
      key: cargo-v0-{{ checksum "Cargo.lock" }}
      paths:
        - ~/.cargo
        - ~/.rustup

  - &store_target_dir
    store_artifacts:
      path: ~/project/target

  - &bench_crate
    <<: *rust_job
    environment:
      LOLBENCH_DATA_DIR: /tmp/lolbench
    steps:
      - checkout
      - *setup
      - *restore_cache
      - *install_deps
      - run:
          name: test benchmark crate
          command: cargo test --release --manifest-path "./benches/$CIRCLE_JOB/Cargo.toml"
      - *save_cache
      - *store_target_dir
      - persist_to_workspace:
          root: /tmp/lolbench
          paths:
            # go's globbing library makes me sad, no ** for any-length path segments?
            # thankfully we only have two layers in storage atm
            - "*/*.json"

jobs:
  fmt:
    <<: *rust_job
    steps:
      - checkout
      - *setup
      - run: rustup component add rustfmt-preview
      - run: cargo fmt-core -- --check

  core:
    <<: *rust_job
    steps:
      - checkout
      - *setup
      - *restore_cache
      - *install_deps
      - run: cargo test-core
      - *save_cache
      - *store_target_dir

  deploy:
    docker:
      - image: debian/stable
    steps:
      - checkout
      - *setup
      - run:
          name: install deployment deps
          command: |
            apt-get update
            apt-get upgrade
            apt-get install ansible git openssh

      - run:
          name: setup deploy secrets
          command: |
            mkdir -p ~/.ssh
            echo "$LOLBENCH_DEPLOY_KEY" | base64 -d > ~/.ssh/lolbench_deploy_private
            chmod 0600 ~/.ssh/lolbench_deploy_private
            echo "$ANSIBLE_VAULT_PASSWORD" > .ansible-vault-password

      - run: deploy.sh $CIRCLE_SHA1

  rebalance:
    <<: *rust_job
    steps:
      - checkout
      - *setup
      - *restore_cache
      - attach_workspace:
          at: /tmp/lolbench
      - *install_deps
      - run: cargo rebalance-benchmarks --sample-dir /tmp/lolbench
      - run: cd /tmp && tar -cvzf lolbench-data-dir.tar.gz lolbench
      - *save_cache
      - store_artifacts:
          path: registry.toml
      - store_artifacts:
          path: /tmp/lolbench
      - store_artifacts:
          path: /tmp/lolbench-data-dir.tar.gz

  brotli_1_1_3:
    <<: *bench_crate
  byteorder_1_2_6:
    <<: *bench_crate
  inflate_0_3_4:
    <<: *bench_crate
  rayon_1_0_0:
    <<: *bench_crate
  crossbeam_epoch_0_4_0:
    <<: *bench_crate
  json_benchmark_c7d3d9b:
    <<: *bench_crate
  raytrace_8de9020:
    <<: *bench_crate
  diesel_1_1_1:
    <<: *bench_crate
  nom_4_0_0:
    <<: *bench_crate
  regex_0_2_6:
    <<: *bench_crate
  doom_9e197d7:
    <<: *bench_crate
  quickcheck_0_6_1:
    <<: *bench_crate
  sha2_0_8_0:
    <<: *bench_crate
  sha3_0_8_0:
    <<: *bench_crate
  snap_0_2_4:
    <<: *bench_crate
  csv_1_0_2:
    <<: *bench_crate

workflows:
  version: 2
  main:
    jobs:
      - fmt
      - core:
          requires:
            - fmt
      - rebalance:
          requires:
            - brotli_1_1_3
            - byteorder_1_2_6
            - crossbeam_epoch_0_4_0
            - csv_1_0_2
            - diesel_1_1_1
            - doom_9e197d7
            - inflate_0_3_4
            - json_benchmark_c7d3d9b
            - nom_4_0_0
            - quickcheck_0_6_1
            - rayon_1_0_0
            - raytrace_8de9020
            - regex_0_2_6
            - sha2_0_8_0
            - sha3_0_8_0
            - snap_0_2_4
      - brotli_1_1_3:
          requires:
            - fmt
      - byteorder_1_2_6:
          requires:
            - fmt
      - inflate_0_3_4:
          requires:
            - fmt
      - rayon_1_0_0:
          requires:
            - fmt
      - crossbeam_epoch_0_4_0:
          requires:
            - fmt
      - json_benchmark_c7d3d9b:
          requires:
            - fmt
      - raytrace_8de9020:
          requires:
            - fmt
      - diesel_1_1_1:
          requires:
            - fmt
      - nom_4_0_0:
          requires:
            - fmt
      - regex_0_2_6:
          requires:
            - fmt
      - doom_9e197d7:
          requires:
            - fmt
      - quickcheck_0_6_1:
          requires:
            - fmt
      - sha2_0_8_0:
          requires:
            - fmt
      - sha3_0_8_0:
          requires:
            - fmt
      - snap_0_2_4:
          requires:
            - fmt
      - csv_1_0_2:
          requires:
            - fmt
      - big_green_button:
          type: approval
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - big_green_button
