on: [push, pull_request]
env:
  LOLBENCH_DATA_DIR: /tmp/lolbench
jobs:
  core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: .github/workflows/git-config.sh 
    - uses: actions-rs/cargo@v1
      with:
        command: test-core

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions-rs/toolchain@v1
      with:
        components: clippy, rustfmt
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - run: cargo fmt-core -- --check

  brotli_1_1_3:
    env:
      LOLBENCH_CRATE: brotli_1_1_3
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: .github/workflows/git-config.sh 
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --package {{ env.LOLBENCH_CRATE }}
    - uses: actions/upload-artifact@v1
      with:
        name: {{ env.LOLBENCH_CRATE }}
        path: {{ env.LOLBENCH_DATA_DIR }}

  # byteorder_1_2_6:
  # clap_2_31_2:
  # crossbeam_epoch_0_4_0:
  # csv_1_0_2:
  # diesel_1_1_1:
  # doom_9e197d7:
  # inflate_0_3_4:
  # json_benchmark_c7d3d9b:
  # nom_4_0_0:
  # quickcheck_0_6_1:
  # rayon_1_0_0:
  # raytrace_8de9020:
  # regex_0_2_6:
  # sha2_0_8_0:
  # sha3_0_8_0:
  # snap_0_2_4:

  # rebalance:
  #   <<: *rust_job
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/lolbench
  #     - run: cargo rebalance-benchmarks --sample-dir /tmp/lolbench
  #     - run: cd /tmp && tar -cvzf lolbench-data-dir.tar.gz lolbench
  #     - store_artifacts:
  #         path: registry.toml
  #     - store_artifacts:
  #         path: /tmp/lolbench
  #     - store_artifacts:
  #         path: /tmp/lolbench-data-dir.tar.gz

